storesInTP <- rbindlist(stores)
storesInTP <- data.frame(storesInTP)
# Create new columns of lat, lng, and popups
storesInTPMap <- storesInTP[, c("X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address)
)
stores711inTP <- storesInTPMap[, -c(1:2)]
# Write.csv
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
View(storesInTP)
View(storesInTP)
storesInTPMap <- storesInTP[, c("POIID", "X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address)
)
stores711inTP <- storesInTPMap[, -c(2:3)]
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
storesInTPMap <- storesInTP[, c("POIID", "X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups1 = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address)
popups2 = sprintf("<p>%s</p><p>%s</p>",POIID, Telno)
)
stores711inTP <- storesInTPMap[, -c(2:3)]
# Write.csv
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
storesInTPMap <- storesInTP[, c("POIID", "X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups1 = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address),
popups2 = sprintf("<p>%s</p><p>%s</p>",POIID, Telno)
)
stores711inTP <- storesInTPMap[, -c(2:3)]
# Write.csv
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~popups2)
markers711
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
storesInTPMap <- storesInTP[, c("POIID", "X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups1 = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address),
popups2 = sprintf("<p>%s</p><p>%s</p>",POIID, Telno)
)
stores711inTP <- storesInTPMap[, -c(1:6)]
# Write.csv
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~popups2)
markers711
q()
sapply(packs, library, character.only=T)
packs <- c("leaflet", "magrittr")
sapply(packs, library, character.only=T)
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~as.character(popups1), icon = list(iconUrl = "C:/NTUTrainRL2/image/711_logo.gif", iconSize = c(20, 20))))
markers711
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~as.character(popups1), icon = list(iconUrl = "C:/NTUTrainRL2/image/711_logo.gif", iconSize = c(20, 20)))
markers711
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~as.character(popups2), icon = list(iconUrl = "C:/NTUTrainRL2/image/711_logo.gif", iconSize = c(20, 20)))
markers711
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~as.character(popups2), icon = list(iconUrl = "C:/NTUTrainRL2/image/711_logo.gif", iconSize = c(20, 20)), clusterOptions = markerClusterOptions())
markers711
cities <- read.csv(textConnection("
city,lat,lng,pop
New Taipei,25.016028,121.462062,3966818
Taipei,25.033141,121.559886,2702315
Taichung,24.149360,120.669673,2719835
Tainan,22.998952,120.226100,1884284
Kaohsiung,22.626788,120.312617,2778992
"))
circleOnMap <- leaflet(cities) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 10, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 8) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 7) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6.5) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s",city,pop))
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s ppl",city,pop))
circleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.549696, lat2=25.009348,,
fillColor = "transparent")
rectangleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.548581, lat2=25.009853,
fillColor = "transparent")
rectangleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.545748, lat2=25.012381,
fillColor = "transparent")
rectangleOnMap
q()
packs <- c("leaflet", "magrittr")
sapply(packs, library, character.only=T)
topoData <- readLines("C:/NTUTrainRL2/data/twTown1982.topo.json") %>%
paste(collapse = "\n")
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 1, color = "#444444", fill = FALSE)
topoData <- readLines("C:/NTUTrainRL2/data/twTown1982.topo.json") %>%
paste(collapse = "\n")
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 7) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = T)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 3, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
q()
usCrudeOilFromNorway <- c(96, 110, 103, 127, 60, 54, 43, 36, 20, 11, 22)
driverKilledInCollisionWithRailwayTrain <- c(76, 74, 76, 87, 66, 59, 63, 60, 55, 52, 46)
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(1,2))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
year <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
presidents <- c("李登輝", "李登輝", "李登輝", "李登輝", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九")
Sys.setlocale(category = "LC_ALL", locale = "cht")
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
presidents <- c("李登輝", "李登輝", "李登輝", "李登輝", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九")
lineDataFrame <- as.data.frame(nthyear, salaryReal, presidents)
lineDataFrame <- data.frame(nthyear, salaryReal, presidents)
View(lineDataFrame)
View(lineDataFrame)
attach(lineDataFrame)
plot(salaryReal~nthyear)
detach(lineDataFrame)
par(mfrow=(1,1))
par(mfrow=c(1,1))
attach(lineDataFrame)
plot(salaryReal~nthyear)
detach(lineDataFrame)
attach(lineDataFrame)
plot(salaryReal~nthyear, type="l")
detach(lineDataFrame)
library(reshape2)
lineDataFrameCast <- dcast(lineDataFrame, salaryReal~presidents+nthyear)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, presidents~nthyear)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~residents)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, salaryReal+nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~alaryReal)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear+salaryReal~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = salaryReal)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = nthyear)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear+presidents~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = "salaryReal")
View(lineDataFrameCast)
View(lineDataFrameCast)
attach(lineDataFrameCast)
plot(salaryReal~李登輝, type="l")
detach(lineDataFrameCast)
attach(lineDataFrameCast)
plot(salaryReal~"李登輝", type="l")
detach(lineDataFrameCast)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="yellow")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="brown")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
View(lineDataFrameCast)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 48000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("bottomright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"))
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 60000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 48000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
#legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
par(mfrow=c(1,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red" fill=T)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red", fill=T)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
par(mfrow=c(1,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
par(bg="grey")
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(rnorm(100),
main="Plot Title",
col.axis="blue",
col.lab="red",
col.main="darkblue")
par(bg="white")
par(bg="white")
plot(rnorm(100),
main="Plot Title",
col.axis="blue",
col.lab="red",
col.main="darkblue")
q()
Sys.getlocale()
Sys.setlocale(category = "LC_ALL", locale = "cht")
Sys.getlocale()
accidentList <- readRDS('data/accidentList.rds')
setwd("C:/NTUTrainRL2")
accidentList <- readRDS('data/accidentList.rds')
View(accidentList)
head(accidentList)
tail(accidentList)
head(accidentList, 10)
colnames(accidentList) <- c("醫院所在縣市別", "醫院別", "性別", "國籍別", "年齡", "醫療檢傷", "救護檢傷")
head(accidentList)
summary(accidentList)#看到一筆101歲的極端值，好像不太對
accidentListNew <- subset(accidentList, 年齡!=101 | is.na(年齡))#使用一下subset()函數!
par(mfrow=c(3,2))
barPlots <- function(){
variables <- names(accidentListNew[, c(-2, -5)])
for (name in variables){
barplot(table(accidentListNew[ ,name]), main=paste("依",name), ylab="人數")
}
}
barPlots()
par(mfrow=c(3,2))
boxPlots <- function(){
variables <- names(accidentListNew[, c(-2, -5)])
for (name in variables){
boxplot(年齡 ~ accidentListNew[ ,name], data=accidentListNew, main=paste('年齡依',name))
}
}
boxPlots()
par(mfrow=c(3,2))
barPlots <- function(){
variables <- names(accidentListNew[, c(-2, -5)])
for (name in variables){
barplot(table(accidentListNew[ ,name]), main=paste("依",name), ylab="人數")
}
}
barPlots()
head(accidentListNew)
table(accidentListNew$醫院別)
par(mfrow=c(1,1))
barplot(table(accidentListNew[ ,"醫院所在縣市別"]), main=paste("依",醫院所在縣市別), ylab="人數")
barplot(table(accidentListNew[ ,"醫院所在縣市別"]), main=paste0("依","醫院所在縣市別"), ylab="人數")
barplot(table(accidentListNew$醫院別), main="依醫院別", ylab="人數", las=2)
par(mfrow=c(3,2))
barPlots <- function(){
variables <- names(accidentListNew[, c(-2, -5)])
for (name in variables){
barplot(table(accidentListNew[ ,name]), main=paste("依",name), ylab="人數")
}
}
barPlots()
barplot(table(accidentListNew$醫院別), main="依醫院別", ylab="人數", las=2)
table(accidentListNew$醫院別)
par(mfrow=c(1,1))
barplot(table(accidentListNew[ ,"醫院所在縣市別"])
par(mfrow=c(1,1))
barplot(table(accidentListNew[ ,"醫院所在縣市別"]))
summary(accidentListNew$年齡)
par(mfrow=c(1,1))
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, freq=FALSE, ylim=c(0, 0.12), col="skyblue")
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡")
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, ylim=c(0, 0.12), col="skyblue")
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
par(mfrow=c(1,1))
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, ylim=c(0, 0.12), col="skyblue", freq=TRUE)
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, col="skyblue")
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, col="skyblue", freq=FALSE)
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, col="skyblue", freq=FALSE)
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
par(mfrow=c(1,1))
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, col="skyblue", freq=FALSE, ylim=c(0, 0.1))
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, col="skyblue", freq=FALSE, ylim=c(0, 0.2))
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
par(mfrow=c(1,1))
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, col="skyblue", freq=FALSE, ylim=c(0, 0.12))
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
hist(na.omit(accidentListNew$年齡))
par(mfrow=c(3,2))
boxPlots <- function(){
variables <- names(accidentListNew[, c(-2, -5)])
for (name in variables){
boxplot(年齡 ~ accidentListNew[ ,name], data=accidentListNew, main=paste('年齡依',name))
}
}
boxPlots()
par(mfrow=c(1,1))
boxplot(年齡 ~ accidentListNew[ ,"國籍別"], data=accidentListNew)
accidentListShort <- accidentListNew[accidentListNew$醫院所在縣市別=='桃園市' & !is.na(accidentListNew$年齡), ]
accidentListShortOrder <- accidentListShort[order(accidentListShort$年齡), ]
dotchart(accidentListShortOrder$年齡,labels=row.names(accidentListShortOrder),cex=.7, main="點圖依年齡", xlab="年齡")
slices <- as.vector(table(accidentListNew$醫療檢傷))#把table轉為向量
labels <- paste(names(table(accidentListNew$醫療檢傷)), "\n", slices, "人", sep="")#table就是有名字的向量
pie(slices, labels = labels, main="醫療檢傷人數")
percentage <- round(slices/sum(slices)*100)
labels2 <- paste(names(table(accidentListNew$醫療檢傷)), "\n", percentage, "%", sep="")
pie(slices, labels=labels2, col=rainbow(length(labels2)), main="醫療檢傷比例")
usCrudeOilFromNorway <- c(96, 110, 103, 127, 60, 54, 43, 36, 20, 11, 22)
driverKilledInCollisionWithRailwayTrain <- c(76, 74, 76, 87, 66, 59, 63, 60, 55, 52, 46)
plot(usCrudeOilFromNorway, driverKilledInCollisionWithRailwayTrain, main="Oil Import vs. Railway Kills", xlab="US Crude Oil Imported From Norway(in million barrels per year)", ylab="Driver Killed in Collision With Railway Train(in people per year)", pch=18, col="darkgreen", bg="darkgreen")
abline(lm(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway), col="red", lwd=2) #add regression line
correlation <- round(cor(usCrudeOilFromNorway, driverKilledInCollisionWithRailwayTrain), 4)*100
text(85, 65, paste("Correlation: ",correlation, "%", sep=""))
plot(usCrudeOilFromNorway, driverKilledInCollisionWithRailwayTrain, main="Oil Import vs. Railway Kills", xlab="US Crude Oil Imported From Norway(in million barrels per year)", ylab="Driver Killed in Collision With Railway Train(in people per year)")
year <- c(1996, 1997,	1998,	1999,	2000,	2001,	2002,	2003,	2004,	2005,	2006,	2007,	2008,	2009,	2010,	2011,	2012,	2013,	2014)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
plot(year, salaryReal, type="l", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1, xlab="", ylab="")
points(year[1:4], salaryReal[1:4], col="blue", bg="blue", pch=15)
points(year[5:12], salaryReal[5:12], col="darkgreen", bg="darkgreen", pch=16)
points(year[13:length(year)], salaryReal[13:length(salaryReal)], col="blue", bg="blue", pch=17)
legend("bottomright", pch=c(15, 16, 17), col=c("blue", "darkgreen", "blue"), c("李登輝", "陳水扁", "馬英九"), bty="o",  box.col="black", cex=.8)
plot(year, salaryReal, type="l", main=paste(" 歷年工業及服務業受僱員工以100年價格衡量之實質薪資"), sub=paste("資料來源: 行政院主計總處","\n","https://www.dgbas.gov.tw/public/Attachment/5225164112198I9Y1K.pdf"),  lwd=1, xlab="", ylab="")
Sys.setlocale(category = "LC_ALL", locale = "cht")
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
presidents <- c("李登輝", "李登輝", "李登輝", "李登輝", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九")
lineDataFrame <- data.frame(nthyear, salaryReal, presidents)
library(reshape2)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = "salaryReal")
par(mfrow=c(1,1))
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
#legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)#會遮住線
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway,
main="Plot Title",
col.axis="blue",
col.lab="red",
col.main="darkgreen")
q()
