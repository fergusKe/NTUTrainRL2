#Get Cities
res <- GET("http://emap.pcsc.com.tw/lib/areacode.js")
res_text <- content(res,"text",encoding = "utf8")
cityreg <- "new AreaNode\\(\\'(.*)\\'.*new bu.* \\'(.*)\\'"
cities <- res_text %>%
str_match_all(cityreg)%>%
.[[1]] %>%
.[, c(2, 3)] %>%
data.frame()
colnames(cities)[1:2] <- c("cityname","citycode")
cities
#Get All Stores in Taipei City
stores <- list()
for (i in 2:2) {
cityname <- cities$cityname[i]
citycode <- cities$citycode[i]
towns <- Get_Towns(citycode)
for (townname in towns$TownName) {
stores[[paste0(cityname, townname)]] <- Get_Stores(cityname, townname)
citytown <- paste0(cityname, townname)
message(citytown)
if (nrow(stores[[citytown]]) > 0 ) {
stores[[citytown]]$cityname <- cityname
stores[[citytown]]$townname <- townname
}
Sys.sleep(abs(rnorm(1, 0)))
}
}
storesInTP <- rbindlist(stores)
storesInTP <- data.frame(storesInTP)
# Create new columns of lat, lng, and popups
storesInTPMap <- storesInTP[, c("X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address)
)
stores711inTP <- storesInTPMap[, -c(1:5)]
big5File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="big5")
write.csv(stores711inTP, file=big5File, row.names=F)
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "BIG-5")
View(stores)
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~popups)
markers711
helloMap <- leaflet() %>%
addTiles() %>% #把預設的地圖圖層加入
addMarkers(lng=121.539366, lat=25.017326, popup="台灣大學")
helloMap
Sys.setlocale(category="LC_ALL", locale = "")
helloMap <- leaflet() %>%
addTiles() %>% #把預設的地圖圖層加入
addMarkers(lng=121.539366, lat=25.017326, popup="台灣大學")
helloMap
helloMap <- leaflet() %>%
addTiles() %>% #把預設的地圖圖層加入
addMarkers(lng=121.539366, lat=25.017326, popup="National Taiwan University")
helloMap
Sys.setlocale(category="LC_ALL", locale = "cht")
helloMap <- leaflet() %>%
addTiles() %>% #把預設的地圖圖層加入
addMarkers(lng=121.539366, lat=25.017326, popup="台灣大學")
helloMap
Sys.setlocale(category="LC_ALL", locale='cht')
# Get Stores
Get_Stores <- function(city, town){
res <- POST("http://emap.pcsc.com.tw/EMapSDK.aspx", body = list(commandid="SearchStore", city = city, town = town))
stores <- xmlParse(content(res, as = "text")) %>%
.["//GeoPosition"] %>%
xmlToDataFrame()
return(stores)
}
# Get Towns
Get_Towns <- function(cityid) {
res <- POST("http://emap.pcsc.com.tw/EMapSDK.aspx", body=list(commandid = "GetTown", cityid = cityid))
towns <- xmlParse(content(res, as = "text")) %>%
.["//GeoPosition"] %>%
xmlToDataFrame()
return(towns)
}
#Get Cities
res <- GET("http://emap.pcsc.com.tw/lib/areacode.js")
res_text <- content(res,"text",encoding = "utf8")
cityreg <- "new AreaNode\\(\\'(.*)\\'.*new bu.* \\'(.*)\\'"
cities <- res_text %>%
str_match_all(cityreg)%>%
.[[1]] %>%
.[, c(2, 3)] %>%
data.frame()
colnames(cities)[1:2] <- c("cityname","citycode")
cities
#Get All Stores in Taipei City
stores <- list()
for (i in 2:2) {
cityname <- cities$cityname[i]
citycode <- cities$citycode[i]
towns <- Get_Towns(citycode)
for (townname in towns$TownName) {
stores[[paste0(cityname, townname)]] <- Get_Stores(cityname, townname)
citytown <- paste0(cityname, townname)
message(citytown)
if (nrow(stores[[citytown]]) > 0 ) {
stores[[citytown]]$cityname <- cityname
stores[[citytown]]$townname <- townname
}
Sys.sleep(abs(rnorm(1, 0)))
}
}
storesInTP <- rbindlist(stores)
storesInTP <- data.frame(storesInTP)
# Create new columns of lat, lng, and popups
storesInTPMap <- storesInTP[, c("X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address)
)
stores711inTP <- storesInTPMap[, -c(1:2)]
# Write.csv
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
View(storesInTP)
View(storesInTP)
storesInTPMap <- storesInTP[, c("POIID", "X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address)
)
stores711inTP <- storesInTPMap[, -c(2:3)]
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
storesInTPMap <- storesInTP[, c("POIID", "X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups1 = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address)
popups2 = sprintf("<p>%s</p><p>%s</p>",POIID, Telno)
)
stores711inTP <- storesInTPMap[, -c(2:3)]
# Write.csv
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
storesInTPMap <- storesInTP[, c("POIID", "X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups1 = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address),
popups2 = sprintf("<p>%s</p><p>%s</p>",POIID, Telno)
)
stores711inTP <- storesInTPMap[, -c(2:3)]
# Write.csv
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~popups2)
markers711
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
storesInTPMap <- storesInTP[, c("POIID", "X", "Y", "POIName", "Telno", "Address")]
storesInTPMap <- transform(
storesInTPMap,
lng = as.numeric(as.character(X))/1000000,
lat = as.numeric(as.character(Y))/1000000,
popups1 = sprintf("<p>%s</p><p>%s</p><p>%s</p>",POIName, Telno, Address),
popups2 = sprintf("<p>%s</p><p>%s</p>",POIID, Telno)
)
stores711inTP <- storesInTPMap[, -c(1:6)]
# Write.csv
utf8File <- file('C:/NTUTrainRL2/data/stores711inTP.csv', encoding="utf8")
write.csv(stores711inTP, file=utf8File, row.names=F)
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~popups2)
markers711
q()
sapply(packs, library, character.only=T)
packs <- c("leaflet", "magrittr")
sapply(packs, library, character.only=T)
stores <- read.table("C:/NTUTrainRL2/data/stores711inTP.csv", header=T, sep=",", stringsAsFactors=F, encoding = "UTF-8")
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~as.character(popups1), icon = list(iconUrl = "C:/NTUTrainRL2/image/711_logo.gif", iconSize = c(20, 20))))
markers711
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~as.character(popups1), icon = list(iconUrl = "C:/NTUTrainRL2/image/711_logo.gif", iconSize = c(20, 20)))
markers711
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~as.character(popups2), icon = list(iconUrl = "C:/NTUTrainRL2/image/711_logo.gif", iconSize = c(20, 20)))
markers711
markers711 <- leaflet(data=stores) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup=~as.character(popups2), icon = list(iconUrl = "C:/NTUTrainRL2/image/711_logo.gif", iconSize = c(20, 20)), clusterOptions = markerClusterOptions())
markers711
cities <- read.csv(textConnection("
city,lat,lng,pop
New Taipei,25.016028,121.462062,3966818
Taipei,25.033141,121.559886,2702315
Taichung,24.149360,120.669673,2719835
Tainan,22.998952,120.226100,1884284
Kaohsiung,22.626788,120.312617,2778992
"))
circleOnMap <- leaflet(cities) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 10, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 8) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 7) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6.5) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s",city,pop))
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s ppl",city,pop))
circleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.549696, lat2=25.009348,,
fillColor = "transparent")
rectangleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.548581, lat2=25.009853,
fillColor = "transparent")
rectangleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.545748, lat2=25.012381,
fillColor = "transparent")
rectangleOnMap
q()
packs <- c("leaflet", "magrittr")
sapply(packs, library, character.only=T)
topoData <- readLines("C:/NTUTrainRL2/data/twTown1982.topo.json") %>%
paste(collapse = "\n")
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 1, color = "#444444", fill = FALSE)
topoData <- readLines("C:/NTUTrainRL2/data/twTown1982.topo.json") %>%
paste(collapse = "\n")
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 7) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = T)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 3, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
q()
usCrudeOilFromNorway <- c(96, 110, 103, 127, 60, 54, 43, 36, 20, 11, 22)
driverKilledInCollisionWithRailwayTrain <- c(76, 74, 76, 87, 66, 59, 63, 60, 55, 52, 46)
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(1,2))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
year <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
presidents <- c("李登輝", "李登輝", "李登輝", "李登輝", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九")
Sys.setlocale(category = "LC_ALL", locale = "cht")
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
presidents <- c("李登輝", "李登輝", "李登輝", "李登輝", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九")
lineDataFrame <- as.data.frame(nthyear, salaryReal, presidents)
lineDataFrame <- data.frame(nthyear, salaryReal, presidents)
View(lineDataFrame)
View(lineDataFrame)
attach(lineDataFrame)
plot(salaryReal~nthyear)
detach(lineDataFrame)
par(mfrow=(1,1))
par(mfrow=c(1,1))
attach(lineDataFrame)
plot(salaryReal~nthyear)
detach(lineDataFrame)
attach(lineDataFrame)
plot(salaryReal~nthyear, type="l")
detach(lineDataFrame)
library(reshape2)
lineDataFrameCast <- dcast(lineDataFrame, salaryReal~presidents+nthyear)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, presidents~nthyear)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~residents)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, salaryReal+nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~alaryReal)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear+salaryReal~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = salaryReal)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = nthyear)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear+presidents~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = "salaryReal")
View(lineDataFrameCast)
View(lineDataFrameCast)
attach(lineDataFrameCast)
plot(salaryReal~李登輝, type="l")
detach(lineDataFrameCast)
attach(lineDataFrameCast)
plot(salaryReal~"李登輝", type="l")
detach(lineDataFrameCast)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="yellow")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="brown")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
View(lineDataFrameCast)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 48000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("bottomright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"))
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 60000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 48000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
#legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
par(mfrow=c(1,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red" fill=T)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red", fill=T)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
par(mfrow=c(1,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
par(bg="grey")
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(rnorm(100),
main="Plot Title",
col.axis="blue",
col.lab="red",
col.main="darkblue")
par(bg="white")
par(bg="white")
plot(rnorm(100),
main="Plot Title",
col.axis="blue",
col.lab="red",
col.main="darkblue")
q()
q()
The sum of squared deviations from the mean, is divided by the degrees of freedom, $n−1$.
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
install.packages("digest")
install.packages("digest")
devtools::install_github("rstudio/rmarkdown")
q()
install.packages("rmarkdown")
install.packages("rmarkdown")
q()
q()
library(shiny)
runExample("01_hello")#有11個內建的範例
getwd()
runExample("01_hello")#有11個內建的範例
setwd("C:/NTUTrainRL2")
dir.create("helloShiny")
file.create("helloShiny/ui.R")
file.create("helloShiny/server.R")
setwd("C:/NTUTrainRL2")
dir.create("HelloWorld")
file.create("HelloWorld/ui.R")
file.create("HelloWorld/server.R")
runApp("HelloWorld", display.mode = "showcase")
library(shiny)
runApp("HelloWorld")
runApp("HelloWorld")
(360-20)/20
(240-5)/5
(6-0.5)/0.5
(58.9-51.7)/51.7
(4.87-1.24)/1.24
q()
