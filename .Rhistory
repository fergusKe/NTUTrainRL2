circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6.5) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 20, popup = ~city)
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s",city,pop))
circleOnMap
circleOnMap <- leaflet(cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s ppl",city,pop))
circleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.549696, lat2=25.009348,,
fillColor = "transparent")
rectangleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.548581, lat2=25.009853,
fillColor = "transparent")
rectangleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.545748, lat2=25.012381,
fillColor = "transparent")
rectangleOnMap
q()
packs <- c("leaflet", "magrittr")
sapply(packs, library, character.only=T)
topoData <- readLines("C:/NTUTrainRL2/data/twTown1982.topo.json") %>%
paste(collapse = "\n")
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 1, color = "#444444", fill = FALSE)
topoData <- readLines("C:/NTUTrainRL2/data/twTown1982.topo.json") %>%
paste(collapse = "\n")
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 7) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addProviderTiles('Stamen.TonerLite') %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = T)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 3, color = "#444444", fill = FALSE)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 2, color = "#444444", fill = FALSE)
q()
usCrudeOilFromNorway <- c(96, 110, 103, 127, 60, 54, 43, 36, 20, 11, 22)
driverKilledInCollisionWithRailwayTrain <- c(76, 74, 76, 87, 66, 59, 63, 60, 55, 52, 46)
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(2,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
par(mfrow=c(1,2))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, xlim=c(0,150), ylim=c(0,100))
year <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
presidents <- c("李登輝", "李登輝", "李登輝", "李登輝", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九")
Sys.setlocale(category = "LC_ALL", locale = "cht")
nthyear <- c(5, 6,	7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
presidents <- c("李登輝", "李登輝", "李登輝", "李登輝", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九")
lineDataFrame <- as.data.frame(nthyear, salaryReal, presidents)
lineDataFrame <- data.frame(nthyear, salaryReal, presidents)
View(lineDataFrame)
View(lineDataFrame)
attach(lineDataFrame)
plot(salaryReal~nthyear)
detach(lineDataFrame)
par(mfrow=(1,1))
par(mfrow=c(1,1))
attach(lineDataFrame)
plot(salaryReal~nthyear)
detach(lineDataFrame)
attach(lineDataFrame)
plot(salaryReal~nthyear, type="l")
detach(lineDataFrame)
library(reshape2)
lineDataFrameCast <- dcast(lineDataFrame, salaryReal~presidents+nthyear)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, presidents~nthyear)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~residents)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, salaryReal+nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~alaryReal)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear+salaryReal~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents+salaryReal)
View(lineDataFrameCast)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = salaryReal)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = nthyear)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear+presidents~salaryReal)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents)
View(lineDataFrameCast)
lineDataFrameCast <- dcast(lineDataFrame, nthyear~presidents, value.var = "salaryReal")
View(lineDataFrameCast)
View(lineDataFrameCast)
attach(lineDataFrameCast)
plot(salaryReal~李登輝, type="l")
detach(lineDataFrameCast)
attach(lineDataFrameCast)
plot(salaryReal~"李登輝", type="l")
detach(lineDataFrameCast)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="yellow")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="brown")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
View(lineDataFrameCast)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod")
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3]~lineDataFrameCast[, 1], type="l", col="blue")
lines(lineDataFrameCast[, 4]~lineDataFrameCast[, 1], type="l", col="darkgreen")
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 48000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("bottomright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"))
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 60000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod","blue","darkgreen"), lty=1,lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42500, 50000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 48000))
lines(lineDataFrameCast[, 3], type="l", col="blue")
lines(lineDataFrameCast[, 4], type="l", col="darkgreen")
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
plot(lineDataFrameCast[, 2]~lineDataFrameCast[, 1], type="l", col="goldenrod", ylim=c(42000, 50000), lwd=2)
lines(lineDataFrameCast[, 3], type="l", col="blue", lwd=2)
lines(lineDataFrameCast[, 4], type="l", col="darkgreen", lwd=2)
#legend("topright", legend=c("李登輝","馬英九","陳水扁"), col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
legend("top", legend=c("李登輝","馬英九","陳水扁"), ncol=3, cex=0.8, bty="n", col=c("goldenrod", "blue", "darkgreen"), lty=1, lwd=2)
par(mfrow=c(1,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red" fill=T)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red", fill=T)
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
par(mfrow=c(1,1))
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway, col="red")
par(bg="grey")
plot(driverKilledInCollisionWithRailwayTrain~usCrudeOilFromNorway)
plot(rnorm(100),
main="Plot Title",
col.axis="blue",
col.lab="red",
col.main="darkblue")
par(bg="white")
par(bg="white")
plot(rnorm(100),
main="Plot Title",
col.axis="blue",
col.lab="red",
col.main="darkblue")
q()
q()
The sum of squared deviations from the mean, is divided by the degrees of freedom, $n−1$.
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
install.packages("digest")
install.packages("digest")
devtools::install_github("rstudio/rmarkdown")
q()
install.packages("rmarkdown")
install.packages("rmarkdown")
q()
q()
16200000000/33
19800000000/33
(600-491)/491
600/33
2500/30
(83-18)/18
51.7/33
58.9/33
(1.8-1.6)/1.6
q()
packs <- c("leaflet", "magrittr")
sapply(packs, library, character.only=T)
cities <- read.csv(textConnection("
city,lat,lng,pop
New Taipei,25.016028,121.462062,3966818
Taipei,25.033141,121.559886,2702315
Taichung,24.149360,120.669673,2719835
Tainan,22.998952,120.226100,1884284
Kaohsiung,22.626788,120.312617,2778992
"))
View(cities)
circleOnMap <- leaflet(data=cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s ppl",city,pop))
circleOnMap
circleOnMap <- leaflet(data=cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s ppl",city,pop))
circleOnMap
rectangleOnMap <- leaflet() %>%
addTiles() %>%
addRectangles(
lng1=121.531157, lat1=25.023037,
lng2=121.545748, lat2=25.012381,
fillColor = "transparent")
rectangleOnMap
twTopoData <- readLines("C:/NTUTrainRL2/data/twTown1982.topo.json", warn=FALSE) %>%
paste(collapse = "\n")
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(twTopoData, weight = 2, color = "#444444", fill = FALSE)
install.packages("rgdal")#取得readORG function
library(rgdal)#取得readORG function
countries <- readOGR("C:/NTUTrainRL2/data/countries.geojson", "OGRGeoJSON")
numericPalette <- colorNumeric(palette="Greens", domain=countries$pop_est)
countriesPopMap <- leaflet(data=countries) %>%
addProviderTiles("Stamen.TonerLite") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~numericPalette(pop_est)
)
countriesPopMap
numericPalette <- colorNumeric(palette="Set1", domain=countries$pop_est)
countriesPopMap <- leaflet(data=countries) %>%
addProviderTiles("Stamen.TonerLite") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~numericPalette(pop_est)
)
countriesPopMap
quantilePalette <- colorQuantile(palette="Greens", domain=countries$pop_est, n=7)
countriesPopMap <- leaflet(data=countries) %>%
addProviderTiles("Stamen.TonerLite") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~quantilePalette(pop_est)
)
countriesPopMap
factorPalette <- colorFactor(topo.colors(7), countries$continent)
countriesContinentMap <- leaflet(data=countries) %>%
addProviderTiles("Stamen.TonerLite") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~factorPalette(continent)
)
countriesContinentMap
quantilePalette <- colorQuantile(palette="Greens", domain=countries$pop_est, n=5)
countriesPopMap <- leaflet(data=countries) %>%
addProviderTiles("Stamen.TonerLite") %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~quantilePalette(pop_est)
) %>%
addLegend(position="bottomright", pal = quantilePalette, values = ~pop_est, opacity = 1, title="Population Quantile")
countriesPopMap
layeredMap <- leaflet(data=cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
# tile groups
addTiles(group = "OpenStreetMap") %>%
addProviderTiles("Stamen.Toner", group = "Toner") %>%
addProviderTiles("Stamen.TonerLite", group = "Toner Lite") %>%
# Overlay groups
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s ppl",city,pop), group="Population") %>%
# Layer controls
addLayersControl(
baseGroups = c("OpenStreetMap", "Toner", "Toner Lite"),
overlayGroups = c("Population"),
options = layersControlOptions(collapsed = FALSE)
)
layeredMap
cities <- read.csv(textConnection("
city,lat,lng,pop
New Taipei,25.016028,121.462062,3966818
Taipei,25.033141,121.559886,2702315
Taichung,24.149360,120.669673,2719835
Tainan,22.998952,120.226100,1884284
Kaohsiung,22.626788,120.312617,2778992
"))
circleOnMap <- leaflet(data=cities) %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1, radius = ~sqrt(pop) * 30, popup = ~sprintf("%s</br>%s ppl",city,pop))
circleOnMap
library(plotly)
setwd("C:/NTUTrainRL2")
employment <- read.table("data/employmentTW.csv", sep=",", header=T)
head(employment)
employment <- transform(
employment,
unemploymentRate = (workingPopInThousand-employedPopInThousand)/workingPopInThousand
)
firstPlotly <- plot_ly(employment, x = year, y = unemploymentRate)
firstPlotly
secondPlotly <- plot_ly(employment, x = year, y = unemploymentRate, type = "scatter", mode = "markers")
secondPlotly
secondPlotly <- plot_ly(employment, x = year, y = unemploymentRate, type = "scatter", mode = "markers+lines")
secondPlotly
smoothLine <- loess(unemploymentRate ~ year, data = employment)
thirdPlotly <- plot_ly(employment, x=year, y=unemploymentRate, name="raw data", mode="markers+lines") %>%
add_trace(y=fitted(smoothLine), name="loess", mode="lines")
thirdPlotly
fourthPlotly <- thirdPlotly %>%
layout(showlegend = FALSE)
fourthPlotly
str(firstPlotly)
class(volcano)
head(volcano)
fifthPlotly <- plot_ly(z = volcano, type = "surface")
fifthPlotly
sixthPlotly <- plot_ly(z = volcano, type = "contour")
sixthPlotly
#先整理一下資料集
fiveCities <- read.table("data/fiveCities.csv", sep=",", header=T)
View(fiveCities)
popIncreaseMelted <- melt(fiveCities[,1:6], id.vars="year", variable.name = "city", value.name="popIncrease")
unemployMelted <- melt(fiveCities[, c(1, 7:11)], id.vars="year", variable.name = "city", value.name="unemploy")
city <- gsub("_popIncrease", "", popIncreaseMelted$city)
fiveCitiesMelted <- data.frame(city, popIncreaseMelted[,c(1,3)], unemployMelted$unemploy)
colnames(fiveCitiesMelted) <- c("city", "year", "popIncreaseRate", "unemploymentRate")
library(reshape2)
popIncreaseMelted <- melt(fiveCities[,1:6], id.vars="year", variable.name = "city", value.name="popIncrease")
unemployMelted <- melt(fiveCities[, c(1, 7:11)], id.vars="year", variable.name = "city", value.name="unemploy")
city <- gsub("_popIncrease", "", popIncreaseMelted$city)
fiveCitiesMelted <- data.frame(city, popIncreaseMelted[,c(1,3)], unemployMelted$unemploy)
colnames(fiveCitiesMelted) <- c("city", "year", "popIncreaseRate", "unemploymentRate")
View(fiveCitiesMelted)
seventhPlotly <- plot_ly(fiveCitiesMelted, x = popIncreaseRate, y = unemploymentRate, color = city, mode = "markers")
seventhPlotly
seventhPlotly <- plot_ly(fiveCitiesMelted, x = popIncreaseRate, y = unemploymentRate, mode = "markers")
seventhPlotly
seventhPlotly <- plot_ly(fiveCitiesMelted, x = popIncreaseRate, y = unemploymentRate, color=city ,mode = "markers")
seventhPlotly
eighthPlotly <- plot_ly(fiveCitiesMelted, x = popIncreaseRate, y = unemploymentRate, color = unemploymentRate, mode = "markers")
eighthPlotly
head(mtcars)
eighthPlusPlotly <- plot_ly(mtcars, x = mpg, y = disp, color = hp, mode = "markers")
eighthPlus1Plotly
eighthPlusPlotly <- plot_ly(mtcars, x = mpg, y = disp, color = hp, mode = "markers")
eighthPlusPlotly
ninthPlotly <- plot_ly(fiveCitiesMelted, x = popIncreaseRate, y = unemploymentRate, color = unemploymentRate, colors="Greens", mode = "markers")
ninthPlotly
tenthPlotly <- plot_ly(fiveCitiesMelted, x = popIncreaseRate, y = unemploymentRate, symbol = city, mode = "markers")
tenthPlotly
eleventhPlotly <- plot_ly(fiveCitiesMelted, x = popIncreaseRate, y = unemploymentRate, group = city, xaxis = paste0("x", city), mode = "markers") %>%
subplot()
eleventhPlotly
twelvethPlotly <- plot_ly(fiveCitiesMelted, x = popIncreaseRate, y = unemploymentRate, group = city, yaxis = paste0("y", city), mode = "markers") %>%
layout(
xaxis = list(range = range(popIncreaseRate) + c(-1, 1)),
yaxis = list(range = range(unemploymentRate) + c(-1, 1))
) %>%
subplot()
twelvethPlotly
thirteenthPlusPlotly <- plot_ly(mtcars, x = mpg, y = disp, group = as.factor(cyl), mode = "markers", color=hp, size=wt)
thirteenthPlusPlotly
thirteenthPlusPlotly <- plot_ly(mtcars, x = mpg, y = disp, mode = "markers", color=hp, size=wt)
thirteenthPlusPlotly
fourteenthPlotly <- plot_ly(
employment,
x=as.character(year),
y=unemploymentRate,
type="bar"
)
fourteenthPlotly
fifteenthPlotly <- plot_ly(
fiveCitiesMelted,
x=as.character(year),
y=unemploymentRate,
group=city,
type="bar"
) %>%
layout(barmode = "stack")
fifteenthPlotly
sixteenthPlotly <- plot_ly(
fiveCitiesMelted,
x=unemploymentRate,
type="histogram",
nbinsx=20
)
sixteenthPlotly
attach(fiveCitiesMelted)
unemployFirstPeriod <- fiveCitiesMelted[year<2007,]
unemployFirstPeriod <- unemployFirstPeriod[, 4]
unemploySecondPeriod <- fiveCitiesMelted[year>=2007,]
unemploySecondPeriod <- unemploySecondPeriod[, 4]
detach(fiveCitiesMelted)
seventeenthPlotly <- plot_ly(
x=unemployFirstPeriod,
type="histogram",
opacity=0.4,
name="1998-2006",
nbinsx=20
) %>%
add_trace(
x=unemploySecondPeriod,
name="2007-2014"
) %>%
layout(barmode="overlay")
seventeenthPlotly
eighteenthPlotly <- plot_ly(fiveCitiesMelted, y = unemploymentRate, color = city, type = "box")
eighteenthPlotly
presidentsRating <- readRDS('data/presidentsRating.rds')
ninteenthPlotly <- plot_ly(presidentsRating, z = rating, x = year, y = quarter, type = "heatmap")
ninteenthPlotly
library(shiny)
runExample("01_hello")#有11個內建的範例
runApp("HelloWorld")
runApp("HelloWorld")
runApp("FirstUI")
runApp("FirstUI")
runApp("FirstUI")
runApp("FirstUI")
runApp("FirstUI")
runApp("BasicWidgets")
runApp("BasicWidgets")
runApp("ReactiveText")
dataset <- read.csv("data/data-CAOyC.csv")
setwd("C:/NTUTrainRL2")
dataset <- read.csv("data/data-CAOyC.csv")
dataset <- read.csv("wsjIndia/data/data-CAOyC.csv")
rowName <- dataset[,1]
dataset <- dataset[,c(2:7)]
datasetMat <- data.matrix(dataset)
rownames(datasetMat) <- rowName
datasetMat
runApp("wsjIndia")
library(rsconnect)
rsconnect::setAccountInfo(name='yaojenkuo', token='C78DF668EE134F538EC050A2DA6CEDA7', secret='9JpGahAHVlmIRP1CYp9wApTCB/YFckvcMnsgefrC')
runApp("wsjIndia")
runApp("wsjIndia")
twTopoData <- readLines("C:/NTUTrainRL2/data/twTown1982.topo.json", warn=FALSE) %>%
paste(collapse = "\n")
head(twTopoData)
leaflet() %>%
setView(lng = 121.081340, lat = 23.905183, zoom = 6) %>%
addTiles() %>%
addTopoJSON(twTopoData, weight = 2, color = "#444444", fill = FALSE)
q()
