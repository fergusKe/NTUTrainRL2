html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <<- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockDF <<- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to global environment
}
yahooRankParser(URL, xpathRank, xpathStock, xpathPrice)
# yahooRankParser
yahooRankParser <- function(URL, xpathRank, xpathStock, xpathPrice){
doc <- read_html(URL)
#columns <- c(xpathRank, xpathStock, xpathPrice)
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockDF <<- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to global environment
}
yahooRankParser(URL, xpathRank, xpathStock, xpathPrice)
dataCollection1 <- function(language, path, rowsPrint){
Sys.setlocale(category="LC_ALL", locale=language)
data <- read.csv(path, stringsAsFactors=FALSE)
data <<- read.csv(path, stringsAsFactors=FALSE)
headRows <- head(data, rowsPrint)
return (headRows)
}
dataCollection1(language="cht", path="C:/NTUTrainRL1/data/funCoastAccident.csv", rowsPrint=10)
View(stockDF)
# yahooRankParser
yahooRankParser <- function(URL, xpathRank, xpathStock, xpathPrice){
doc <- read_html(URL)
#columns <- c(xpathRank, xpathStock, xpathPrice)
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
rank <<- rank
price <<- price
stockDF <<- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to global environment
}
yahooRankParser(URL, xpathRank, xpathStock, xpathPrice)
yahooRankParser <- function(URL, xpathRank, xpathStock, xpathPrice){
doc <- read_html(URL)
#columns <- c(xpathRank, xpathStock, xpathPrice)
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockDF <<- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to global environment
}
yahooRankParser(URL, xpathRank, xpathStock, xpathPrice)
head(stockDF)
stockDFSplit <- function(){
stock <- as.character(stockDF[, "stock"])
stockCD <- substr(stock, 1, 4)
stockName <- substr(stock, 6, nchar(stock))
stockRank <- stockDF[, "rank"]
stockPrice <- stockDF[, "price"]
stockDFSplit <<- data.frame(rank=stockRank, price=stockPrice, code=stockCD, name=stockName)
}
stockDFSplit <- function(){
stock <- as.character(stockDF[, "stock"])
stockCD <- substr(stock, 1, 4)
stockName <- substr(stock, 6, nchar(stock))
stockRank <- stockDF[, "rank"]
stockPrice <- stockDF[, "price"]
stockDFSplit <<- data.frame(rank=stockRank, price=stockPrice, code=stockCD, name=stockName)
return(stockDFSplit)
}
stockDFSplit()
stockDFSplit <- function(){
stock <- as.character(stockDF[, "stock"])
stockCD <- substr(stock, 1, 4)
stockName <- substr(stock, 6, nchar(stock))
stockRank <- stockDF[, "rank"]
stockPrice <- stockDF[, "price"]
stockDFSplit <<- data.frame(rank=stockRank, name=stockName, price=stockPrice, code=stockCD)
return(stockDFSplit)
}
stockDFSplit()
library(plotly)
install.packages("plotly")
library(plotly)
plot_ly(stockDFSplit, x=code, y=price)
plot_ly(stockDFSplit, x=as.factor(code), y=price)
plot_ly(stockDFSplit, x=code, y=price, type="bar")
plot_ly(z = volcano, type = "surface")
q()
yahooRankParser <- function(URL, xpathRank, xpathStock, xpathPrice){
doc <- read_html(URL)
#columns <- c(xpathRank, xpathStock, xpathPrice)
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockDF <<- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to global environment
}
# Declaring function parameters
libVectors <- c("magrittr", "rvest")
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse"
xpathRank <- "//table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//table[2]/tbody/tr/td[3]"
# Executing functions
neccessaryLibs(libVectors)
yahooRankParser(URL, xpathRank, xpathStock, xpathPrice)
library(rvest)
yahooRankParser(URL, xpathRank, xpathStock, xpathPrice)
stockDFSplit <- function(){
stock <- as.character(stockDF[, "stock"])
stockCD <- substr(stock, 1, 4)
stockName <- substr(stock, 6, nchar(stock))
stockRank <- stockDF[, "rank"]
stockPrice <- stockDF[, "price"]
stockDFSplit <<- data.frame(rank=stockRank, name=stockName, price=stockPrice, code=stockCD)
return(stockDFSplit)
}
stockDFSplit()
plot_ly(stockDFSplit, x=code, y=price, type="bar")
library(plotly)
plot_ly(stockDFSplit, x=code, y=price, type="bar")
plot_ly(stockDFSplit, x=name, y=price, type="bar")
plot_ly(stockDFSplit, x=name, y=price, type="bar", color=name)
library(leaflet)
install.packages("leaflet")
library(leaflet)
helloMap <- leaflet() %>%
addTiles() %>% #把預設的地圖圖層加入
addMarkers(lng=121.539366, lat=25.017326, popup="National Taiwan University")
helloMap
Sys.setlocale(category = "LC_ALL", locale = "cht")
data <- read.csv("C:/NTUTrainRL1/data/funCoastAccident.csv", stringsAsFactors=FALSE)
head(data, 10)
helloMap <- leaflet() %>%
addTiles() %>% #把預設的地圖圖層加入
addMarkers(lng=121.539366, lat=25.017326, popup="台大")
helloMap
helloMap <- leaflet() %>%
addTiles() %>% #把預設的地圖圖層加入
addMarkers(lng=121.539366, lat=25.017326, popup="台灣大學")
helloMap
View(data)
dataComplete <- complete.cases(data)
dataComplete <- data[complete.cases(data), ]
View(dataComplete)
View(dataComplete)
ggplot(dataComplete, aes(x="年齡"))+
geom_histogram(fill="pink", colour="black")+
facet_grid(縣市別)
ggplot(dataComplete, aes(x="年齡"))+
geom_histogram(fill="pink", colour="black")+
facet_grid(醫療檢傷~.)
colnames(data) <- c("number", "city", "hospital", "gender", "nationality", "age", "medLV1", "medLV2")
dataComplete <- data[complete.cases(data), ]
ggplot(dataComplete, aes(x="age"))+
geom_histogram(fill="pink", colour="black")+
facet_grid(medLV1~.)
str(data)
hist(data$age)
facet_grid(medLV1~.)
ggplot(dataComplete, aes(x=age))+
geom_histogram(fill="pink", colour="black")+
facet_grid(medLV1~.)
ggplot(dataComplete, aes(x=age))+
geom_histogram(fill="pink", colour="black")+
facet_grid(medLV2~.)
max(data$age)
summary(data$age)
str(cars)
plot(cars)
plot_ly(cars, x=speed, y=dist, type="scatter")
plot_ly(cars, x=speed, y=dist, type="scatter", mode="markers")
fit <- lm(dist~speed)
fit <- lm(cars$dist~cars$speed)
scatterPlot <- plot_ly(cars, x=speed, y=dist, type="scatter", mode="markers")
scatterPlot <- add_trace(scatterPlot, y=fitted(fit), name="linear model")
scatterPlot
scatterPlot <- plot_ly(cars, x=speed, y=dist, type="scatter", mode="markers")
scatterPlot
fit <- lm(cars$dist~cars$speed)
scatterPlot <- add_trace(scatterPlot, y=fitted(fit), name="linear model", mode="lines")
scatterPlot
str(cars)
scatterPlot <- plot_ly(cars, x=speed, y=dist, type="scatter", mode="markers", name="raw")
scatterPlot
fit <- lm(cars$dist~cars$speed)
scatterPlot <- add_trace(scatterPlot, y=fitted(fit), name="linear model", mode="lines")
scatterPlot
scatterPlot <- plot_ly(cars, x=speed, y=dist, type="scatter", mode="markers", name="data points")
scatterPlot
fit <- lm(cars$dist~cars$speed)
scatterPlot <- add_trace(scatterPlot, y=fitted(fit), name="linear model", mode="lines")
scatterPlot
scatterPlot <- add_trace(scatterPlot, y=fitted(fit), name="linear model", mode="markers+lines")
scatterPlot
scatterPlot <- plot_ly(cars, x=speed, y=dist, type="scatter", mode="markers", name="data points")
scatterPlot
fit <- lm(cars$dist~cars$speed)
scatterPlot <- add_trace(scatterPlot, y=fitted(fit), name="linear model", mode="lines")
scatterPlot
library(rvest)
q()
library(magrittr)
library(rvest)
library(magrittr)
library(rvest)
yahooStockRankParser <- function(n) {
if ( !n %in% 1:100 ) {
print("Parameter n should be an integer between 1 and 100")
} else {
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100"
xpathRank <- "//tbody/tr/td/table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//tbody/tr/td/table[2]/tbody/tr/td[3]"
doc <- read_html(URL)
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockTmp <- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to local environment
head(stockTmp, n)
}
}
yahooStockRankParser(n=39)
yahooStockRankParser <- function(n) {
if ( !n %in% 1:100 ) {
print("Parameter n should be an integer between 1 and 100")
} else {
URL <- sprintf("https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100")
xpathRank <- "//tbody/tr/td/table[2]/tbody/tr/td[1]"
xpathStock <- "//tbody/tr/td[@class='name']"
xpathPrice <- "//tbody/tr/td/table[2]/tbody/tr/td[3]"
doc <- read_html(URL)
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockTmp <- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))# return to local environment
head(stockTmp, n)
}
}
yahooStockRankParser(n=39)
yahooStockRankParser(n=39)
library(pixmap)
install.packages("pixmap")
library(pixmap)
onePiece <- read.pnm("c:/NTUTrainRL1/image/onePiece.pgm")#把圖片指派給onePiece這個物件
onePiece#看看onePiece物件
plot(onePiece)#把onePiece物件畫出來看看
str(onePiece)#檢查onePiece物件的結構
onePiece@grey[300, 600]#看一下(300, 600)這個像素的亮度
locator()#這是R的內建函式，可以找到圖片坐標
noUsopp <- onePiece
noUsopp@grey[68.91861:301.05464, 219.0638:311.9182] <- 1#把騙人布用國防布蓋掉
plot(noUsopp)#看看結果，好像沒有蓋好蓋滿QQ
q()
summary(object = cars)
summary(cars)
head(Wage)
install.packages("ISLR")
library(ISLR)
q()
install.packages("rvest")
summaryCars <- summary(cars)
summaryCars$1
summaryCars
names(summaryCars)
as.vector(summaryCars)
summaryCars[1]
summaryCars[1][1]
summaryCars[2]
names[summaryCars]
names(summaryCars)
vectorSummaryCars <- as.vector(summaryCars)
names(vectorSummaryCars)
summaryCars$Min.
summaryCars$Min
summaryCars$Median
q()
105000+84000
q()
library(Hmisc)
datadir <- "C:/NTUTrainRL1/data"
sasexe <- "C:/Program Files/SASHome/SASFoundation/9.4/sas.exe"
accidentList <- sas.get(libraryName=datadir, member="funcoastaccident", sasprog=sasexe)
install.packages("Hmisc")
library(Hmisc)
datadir <- "C:/NTUTrainRL1/data"
sasexe <- "C:/Program Files/SASHome/SASFoundation/9.4/sas.exe"
accidentList <- sas.get(libraryName=datadir, member="funcoastaccident", sasprog=sasexe)
q()
q()
library(magrittr)
library(httr)
library(rvest)
library(stringr)
Sys.setlocale(category = "LC_ALL", locale = "")
area <- "新北市"
urlArea <- URLencode(area)
url <- sprintf("http://www.etwarm.com.tw/object_list.php?area=%s", urlArea)#把URLencode(area)代入%s
# 看總共有幾頁要爬
max_index <- read_html(url) %>%
html_nodes(., xpath = "//div[@class='page']/a") %>% #使用xpath helper
html_text %>% #取出標籤中的內容
str_extract(., "[0-9]+") %>% #使用正規表示式Regular expression把數字抓出來
as.integer %>% #化成整數
max(., na.rm = TRUE) #取最大值
# 做出'max_index'個URLs
urls <- sprintf("http://www.etwarm.com.tw/object_list?area=%s&page=", urlArea)
urls <- paste0(urls, 1:max_index)#concatenate and remove blank
# 開始抓資料
houses <- data.frame()# 建立一個空的data frame
# for (i in 1:max_index) {
# 先抓前3頁就好比較快
for (i in 1:3) {
etwarm <- read_html(urls[i])
district <- etwarm %>%
html_nodes(., xpath = "//li[@class='obj_item']/div[@class='obj_info']/h3/a") %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8") %>% # Windows
str_extract(.,sprintf("%s.*區", area))# "新北市.*區"
price <- etwarm %>%
html_nodes(xpath = "//div[@class='price']") %>%
html_text %>%
str_replace_all(",", "") %>%
as.numeric()
temp <- data.frame(districtDF = district, priceDF = price * 10000)#還原單位
houses = rbind(houses, temp) #每抓一頁就往下append
Sys.sleep(abs(rnorm(1))) #不要一直抓
print(urls[i]) #告訴user這次抓了哪幾頁
}
Sys.setlocale(category = "LC_ALL", locale = "cht")
View(houses)
install.packages("rvest")
library(magrittr)
library(httr)
library(rvest)
library(stringr)
Sys.setlocale(category = "LC_ALL", locale = "")
area <- "新北市"
urlArea <- URLencode(area)
url <- sprintf("http://www.etwarm.com.tw/object_list.php?area=%s", urlArea)#把URLencode(area)代入%s
# 看總共有幾頁要爬
max_index <- read_html(url) %>%
html_nodes(., xpath = "//div[@class='page']/a") %>% #使用xpath helper
html_text %>% #取出標籤中的內容
str_extract(., "[0-9]+") %>% #使用正規表示式Regular expression把數字抓出來
as.integer %>% #化成整數
max(., na.rm = TRUE) #取最大值
max_index <- read_html(url) %>%
html_nodes(., xpath = "//div[@class='page']/a") %>% #使用xpath helper
html_text %>% #取出標籤中的內容
str_extract(., "[0-9]+") %>% #使用正規表示式Regular expression把數字抓出來
as.integer %>% #化成整數
max(., na.rm = TRUE) #取最大值
max_index <- read_html(url) %>%
html_nodes(., xpath = "//div[@class='page']/a") %>% #使用xpath helper
html_text %>% #取出標籤中的內容
str_extract(., "[0-9]+") %>% #使用正規表示式Regular expression把數字抓出來
max_index <- read_html(url) %>%
html_nodes(., xpath = "//div[@class='page']/a") %>% #使用xpath helper
html_text %>% #取出標籤中的內容
str_extract(., "[0-9]+")
max_index <- read_html(url)
Sys.getlocale()
area <- "新北市"
urlArea <- URLencode(area)
url <- sprintf("http://www.etwarm.com.tw/object_list.php?area=%s", urlArea)#把URLencode(area)代入%s
max_index <- read_html(url)
yahooStockRankParser <- function(n){
library(magrittr)
library(rvest)
# 資料僅有股價排名前100的個股
if (!n %in% 1:100){
print("Parameter n should be a integer between 1 and 100")
}else{
URL <- "https://tw.stock.yahoo.com/d/i/rank.php?t=pri&e=tse&n=100" #網頁
xpathRank <- "//table[2]/tbody/tr/td[1]"#排名的xpath
xpathStock <- "//tbody/tr/td[@class='name']"#股票名稱的xpath
xpathPrice <- "//table[2]/tbody/tr/td[3]"#股價的xpath
doc <- read_html(URL, encoding="cp950")#將網頁讀進R
# 用相同的方式擷取出需要的資訊
rank <- doc %>%
html_nodes(.,xpath = xpathRank) %>%
html_text
stock <- doc %>%
html_nodes(.,xpath = xpathStock) %>%
html_text %>%
iconv(from = "UTF-8", to = "UTF-8")
price <- doc %>%
html_nodes(.,xpath = xpathPrice) %>%
html_text
stockTmp <- data.frame(rank=as.integer(rank), stock=stock, price=as.numeric(price))
stockDF <- head(stockTmp, n)
assign('stockDF',stockDF,envir=.GlobalEnv)
}
}
yahooStockRankParser(n = 101)#回傳訊息
yahooStockRankParser(n = 30)
library(httr)
library(XML)
library(stringr)
get_stores <- function(city, town) {
pcsc <- POST("http://emap.pcsc.com.tw/EMapSDK.aspx", body = list(commandid = "SearchStore", city = city, town = town))
stores <- xmlParse(content(pcsc, as = "text")) %>%
.["//GeoPosition"] %>%
xmlToDataFrame
return(stores)
}#從Firefox開發者介面觀察
storeDaan <- get_stores("台北市", "大安區")
View(storeDaan)
?read_html
max_index <- read_html(url, encoding = "cp950")
?XML
?POST
crew <- c("Monkey D Luffy", "Roronoa Zoro", "Nami", "Usopp", "Vinsmoke Sanji", "Tony Tony Chopper", "Nico Robin", "Franky", "Brook")
birthday <- c("1997-05-05", "1995-11-11", "1996-07-03", "1997-04-01", "1995-03-02", "1999-12-24", "1986-02-06", "1980-03-09", "1926-04-03")
gender <- c("Male", "Male", "Female", "Male", "Male", "Male", "Female", "Male", "Male")
strawHatPirate <- data.frame(crew, birthday, gender)
str(strawHatPirate)
Sys.Date()
class(Sys.Date())
q()
Sys.time()
library(ggplot2)
#From 1999 to 2009, US Dept. of Energy and Centers of Disease Control & Prevention
usCrudeOilFromNorway <- c(96, 110, 103, 127, 60, 54, 43, 36, 20, 11, 22)
driverKilledInCollisionWithRailwayTrain <- c(76, 74, 76, 87, 66, 59, 63, 60, 55, 52, 46)
scatterPlotData <- data.frame(usCrudeOilFromNorway, driverKilledInCollisionWithRailwayTrain)
scatterPlot <- ggplot(scatterPlotData, aes(x=usCrudeOilFromNorway, y=driverKilledInCollisionWithRailwayTrain)) + geom_point(size=4)+ylab("Driver Killed in Collision With Railway Train(in people per year)")+xlab("US Crude Oil Imported From Norway(in million barrels per year)")+ggtitle("High correlation but no causality")
correlation <- round(cor(usCrudeOilFromNorway, driverKilledInCollisionWithRailwayTrain), 4)*100
#add regression line and text
scatterPlot+stat_smooth(method=lm, level=0.99)+annotate("text", label=paste("Correlation=",correlation), x=85, y=60)
year <- c(1996, 1997,	1998,	1999,	2000,	2001,	2002,	2003,	2004,	2005,	2006,	2007,	2008,	2009,	2010,	2011,	2012,	2013,	2014)
salaryReal <- c(42520, 44195, 44798, 46040, 46605, 46716, 46330, 47058, 46989, 46447, 46521, 46650, 45038, 43193, 44989, 45508, 44726, 44446, 45494)
lineGraphData <- data.frame(year, salaryReal)
ggplot(lineGraphData, aes(x=year, y=salaryReal)) + geom_line() + geom_point(size=4)+ggtitle("歷年工業及服務業受僱員工以100年價格衡量之實質薪資")+xlab("")+ylab("")
ggplot(lineGraphData, aes(x=year, y=salaryReal)) + geom_line() + geom_point(size=4)+ggtitle("歷年工業及服務業受僱員工以100年價格衡量之實質薪資")+xlab("")+ylab("")+annotate("text", x=1998, y=44000, label="李登輝執政")+annotate("text", x=2002, y=46000, label="陳水扁執政")+annotate("text", x=2011, y=44000, label="馬英九執政")
nthyear <- c(5, 6,  7, 8,	1,	2,	3,	4,	5,	6,	7,	8,	1,	2,	3,	4,	5,	6,	7)
presidents <- c("李登輝", "李登輝", "李登輝", "李登輝", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "陳水扁", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九", "馬英九")
lineGraphData <- data.frame(nthyear, salaryReal, presidents)
ggplot(lineGraphData, aes(x=nthyear, y=salaryReal, colour=presidents))+geom_line(lwd=2)+geom_point(size=4)#automatically assign colors
ggplot(lineGraphData, aes(x=nthyear, y=salaryReal, colour=presidents))+geom_line(lwd=2)+geom_point(size=4)+scale_colour_manual(values = c("李登輝" = "goldenrod", "陳水扁" = "darkgreen", "馬英九" = "blue"))#custom colors
ggplot(lineGraphData, aes(x=nthyear, y=salaryReal, colour=presidents))+geom_line(lwd=2)+geom_point(size=4)#automatically assign colors
ggplot(lineGraphData, aes(x=nthyear, y=salaryReal, colour=presidents))+geom_line(lwd=1)+geom_point(size=3)+scale_colour_manual(values = c("李登輝" = "goldenrod", "陳水扁" = "darkgreen", "馬英九" = "blue"))#custom colors
ggplot(lineGraphData, aes(x=nthyear, y=salaryReal, colour=presidents))+geom_line(lwd=1)+geom_point(size=3)#automatically assign colors
ggplot(lineGraphData, aes(x=year, y=salaryReal)) + geom_line() + geom_point(size=4)+ggtitle("歷年工業及服務業受僱員工以100年價格衡量之實質薪資")+xlab("")+ylab("")+annotate("text", x=1998, y=44000, label="李登輝執政")+annotate("text", x=2002, y=46000, label="陳水扁執政")+annotate("text", x=2011, y=44000, label="馬英九執政")
ggplot(accidentListNew, aes(x=county, y=age)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")+coord_flip()
setwd("C:/NTUTrainRL2")
accidentList <- readRDS('data/accidentList.rds')
summary(accidentList)#看到一筆101歲的極端值，好像不太對
accidentListNew <- subset(accidentList, age!=101)#使用subset()函數將年齡為101的資料剔除
ggplot(accidentListNew, aes(x=county, y=age)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")+coord_flip()
ggplot(accidentListNew, aes(x=county, y=age)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")+ylim(0, 50)
ggplot(accidentListNew, aes(x=county, y=age)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")
ggplot(accidentListNew, aes(x=county, y=age)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")+theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank())
ggplot(accidentListNew, aes(x=county, y=age)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")+theme_bw()+theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank())
ggplot(accidentListNew, aes(x=county, y=age, fill=county)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")
ggplot(accidentListNew, aes(x=county, y=age, fill=county)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")+guides(fill=FALSE)#移除圖例
ggplot(accidentListNew, aes(x=county, y=age, fill=county)) + geom_boxplot()+ggtitle("年齡依醫院所在縣市別")+theme(legend.position="top")
ggplot(accidentListNew, aes(x=gender)) + geom_bar(fill="lightblue", colour="black")+ylab("人數")+ggtitle("依性別")+facet_grid(. ~woundType1)#1*n
ggplot(accidentListNew, aes(x=gender)) + geom_bar(fill="lightblue", colour="black")+ylab("人數")+ggtitle("依性別")+facet_grid(woundType1~.)#m*1
ggplot(accidentListNew, aes(x=gender)) + geom_bar(fill="lightblue", colour="black")+ylab("人數")+ggtitle("依性別")+facet_grid(. ~woundType1)#1*n
ggplot(accidentListNew, aes(x=gender)) + geom_bar(fill="lightblue", colour="black")+ylab("人數")+ggtitle("依性別")+facet_grid(woundType1~woundType2)#m*n
ggplot(accidentListNew, aes(x=gender)) + geom_bar(fill="lightblue", colour="black")+ylab("人數")+ggtitle("性別依醫療檢傷x救護檢傷")+facet_grid(woundType1~woundType2)#m*n
ggplot(scatterPlotData, aes(x=usCrudeOilFromNorway, y=driverKilledInCollisionWithRailwayTrain)) + geom_point(colour="red", size=4)
ggplot(accidentListNew, aes(x=age))+geom_histogram(binwidth=3, fill="red", colour="black")+ggtitle("八仙傷亡年齡直方圖")+ylab("頻率")
presidentsRating <- readRDS('data/presidentsRating.rds')
ggplot(presidentsRating, aes(x=year, y=quarter, fill=rating)) + geom_raster()
ggplot(presidentsRating, aes(x=year, y=quarter, fill=rating)) + geom_raster() + scale_x_continuous(breaks=seq(1940, 1976, by=4)) + scale_y_reverse() + scale_fill_gradient2(midpoint=50, mid="grey70", limits=c(0,100))
library(vcd)
mosaic(HairEyeColor, shade=TRUE, legend=FALSE)#用一個table的示範資料集
```{r}
install.packages("vcd")
library(vcd)
mosaic(HairEyeColor, shade=TRUE, legend=FALSE)#用一個table的示範資料集
