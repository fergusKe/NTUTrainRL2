View(ISAttacks2015)
str(date)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
str(date)
str(ISAttacks2015)
ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks2015)
ISAttacks2015 <- ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks2015)
date <- c('2015-11-13', '2015-03-18', '2015-06-26', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-05-22', '2015-03-21')
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
ISAttacks <- ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks)
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sunmarine', 'Ankara', 'Sousse', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis')
deaths <- c(129, 43, 224, 102, 38, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sharm el Sheikh', 'Ankara', 'Sousse', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis')
deaths <- c(129, 43, 224, 102, 38, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-07-18', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Iraq', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sharm el Sheikh', 'Ankara', 'Sousse', 'Khan Bani Saad', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis City')
deaths <- c(129, 43, 224, 102, 38, 125, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
str(ISAttacks2015)
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
name2 <- c("Monkey D. Luffy", "Tony Tony Chopper", "Nico Robin", "Brook")
devilFruit <- c("Rubber", "Human", "Flower", "Underworld")
devilFruitList <- cbind(name2, devilFruit)
devilFruitList <- data.frame(name2, devilFruit, stringsAsFactors=FALSE)
View(strawHatPirate)
View(devilFruitList)
devilFruitStrawHatPirate <- merge(strawHatPirate, devilFruitList, by.x="name", by.y="name2")
View(devilFruitStrawHatPirate)
devilFruitStrawHatPirate <- merge(strawHatPirate, devilFruitList, by.x="name", by.y="name2", all.x=TRUE)#使用all.x=TRUE的option
View(devilFruitStrawHatPirate)
devilFruitStrawHatPirate <- merge(strawHatPirate, devilFruitList, by.x="name", by.y="name2", all.y=TRUE)#使用all.y=TRUE的option
View(devilFruitStrawHatPirate)
devilFruitStrawHatPirate <- merge(strawHatPirate, devilFruitList, by.x="name", by.y="name2", all.x=TRUE, all.y=TRUE)#使用all.x=TRUE與all.y=TRUE的option
View(devilFruitStrawHatPirate)
View(strawHatPirate)
chopper <- c("Tony Tony Chopper", "Doctor", 50, 17, "12/24/1998", 50, 80)
chopper <- c("Tony Tony Chopper", "Doctor", 50, 17, "12/24/1998", 50, 80)
strawHatPirate2 <- rbind(strawHatPirate, chopper)
View(strawHatPirate2)
strawHatPirate3 <- strawHatPirate2[, c(1:3)]#取前3個變數
View(strawHatPirate3)
strawHatPirate3 <- strawHatPirate2[, c("name", "occupation", "bounty")]#取前3個變數
View(strawHatPirate3)
strawHatPirate4 <- strawHatPirate2[, -c(1:3)]#刪除前3個變數
View(strawHatPirate4)
strawHatPirate4 <- strawHatPirate2[, -c("name", "occupation", "bounty")]#刪除前3個變數
strawHatPirate4 <- strawHatPirate2[, !c("name", "occupation", "bounty")]#刪除前3個變數
strawHatPirate4 <- strawHatPirate2[, -c(1:3)]#刪除前3個變數
View(strawHatPirate3)
strawHatPirate4 <- strawHatPirate2[, c(-1:-3)]#刪除前3個變數
View(strawHatPirate4)
strawHatPirate4 <- strawHatPirate2[, c(-"name", -"occupation", -"bounty")]#刪除前3個變數
deleteVars <- names(strawHatPirate2) %in% c("name", "occupation", "bounty")#logical test
strawHatPirate4 <- strawHatPirate2[!deleteVars]#刪除前3個變數
View(strawHatPirate4)
View(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[1:3, ]#選擇前3列
View(strawHatPirate5)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[age>17 & occupation=='Captain',]
detach(strawHatPirate2)
View(strawHatPirate5)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[age>17 & occupation=='Captain',]
View(strawHatPirate5)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[age>17 & occupation=="Captain",]
detach(strawHatPirate2)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[occupation=="Captain",]
View(strawHatPirate5)
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[occupation==="Captain",]
attach(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[occupation=="Captain",]
View(strawHatPirate5)
strawHatPirate5 <- strawHatPirate2[strawHatPirate2$occupation=='Captain', ]
View(strawHatPirate5)
View(strawHatPirate5)
View(strawHatPirate)
View(strawHatPirate2)
strawHatPirate5 <- strawHatPirate2[strawHatPirate2$age>17 & strawHatPirate2$strength>30, ]#2個篩選條件使用&連接
View(strawHatPirate5)
install.packages("sqldf")
strawHatPirate6 <- sqldf("select name, occupation, bounty from strawHatPirate2 where age>17 order by age")
library(sqldf)
strawHatPirate6 <- sqldf("select name, occupation, bounty from strawHatPirate2 where age>17 order by age")
View(strawHatPirate6)
strawHatPirate6 <- sqldf("select name, occupation, bounty, age from strawHatPirate2 where age>17 order by age")
View(strawHatPirate6)
strawHatPirate6 <- sqldf("select name, occupation, bounty, age from strawHatPirate2 where age>17 order by bounty")
View(strawHatPirate6)
View(strawHatPirate2)
sqldf("select avg(age) as avgAge from strawHatPirate2")
View(devilFruitList)
sqldf("select a.name, b.devilFruit from strawHatPirate2 a inner join devilFruitList on a.name=b.name2")
sqldf("select strawHatPirate2.name, devilFruitList.devilFruit from strawHatPirate2 inner join devilFruitList on strawHatPirate2.name=devilFruitList.name2")
q()
q()
naExample <- c(88, NA, 12, 92, 33)
nullExample <- c(88, NULL, 12, 92, 33)
mean(naExample)
mean(naExample, na.rm=TRUE)#na.rm as in NA removoe
mean(nullExample)
matrix <- matrix(1:8, nrow=2)#創造一個2*4的矩陣做範例
matrix
apply(matrix, 1, sum)#把各列加總
apply(matrix, 2, sum)#把各欄加總
sumRow <- apply(matrix, 1, sum)#把各列加總
sumColumn <- apply(matrix, 2, sum)#把各欄加總
typeof(sumRow)
class(sumRow)
str(sumRow)
str(matrix)
class(matrix)
fn <- function(x){
x/10
}
fnRow <- apply(matrix, 1, fn)
fnRow
matrix
fnColumn <- apply(matrix, 2, fn)
fnColumn
?max()
max
min
maximum <- function(x){
sortX <- sort(x, decreasing=TRUE)
return sortX[1]
}
fnRow <- apply(matrix, 1, fn)
maximum <- function(x){
sortX <- sort(x, decreasing=TRUE)
return sortX[1]
}
maximum <- function(x){
return sort(x, decreasing=TRUE)[1]
}
maximum <- function(x){
sort(x, decreasing=TRUE)[1]
}
maxRow <- apply(matrix, 1, maximum)
maxColumn <- apply(matrix, 2, maximum)
maxRow
maxColumn
matrix
maximum <- function(x){
sort(x)[1]
}
maxRow <- apply(matrix, 1, maximum)
maxColumn <- apply(matrix, 2, maximum)
maximum <- function(x){
sort(x, decreasing=TRUE)[1]
}
maxRow <- apply(matrix, 1, maximum)
maxColumn <- apply(matrix, 2, maximum)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3)
salesMatrix
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3, byrow=TRUE)
salesMatrix
findOutliers(salesMatrix)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 2, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3, byrow=TRUE)
findOutliers(salesMatrix)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3, byrow=TRUE)
findOutliers(salesMatrix)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,1,50,60), nrow=3, byrow=TRUE)
findOutliers(salesMatrix)
findOutliers <- function(x){
findOutlier <- function(xrow){
medianXRow <- median(xrow)
distance <- abs(xrow-medianXRow)
return(which.max(distance))
}
return(apply(x, 1, findOutlier))
}
salesMatrix <- matrix(c(1,2,30,1,10,11,50,1,60), nrow=3, byrow=TRUE)
findOutliers(salesMatrix)#告訴你第一列的第三個元素、第二列的第一個
list(1:5, 11:15)
lapply(list1, meadian)#應用median函數到list1
lapply(list1, median)#應用median函數到list1
list1 <- list(1:5, 11:15)#創造一個包含兩個vector的list
lapply(list1, median)#應用median函數到list1
sapply(list1, median)#應用median函數到list1
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
lapply(strawHatPirate, sort)#對每個變數都應用sort函數
sapply(strawHatPirate, sort)#對每個變數都應用sort函數
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
strawHatPirate$birthdayAsDate <- as.Date(strawHatPirate$birthday, "%m/%d/%Y")#Y for 4-digit, y for 2-digit
lapply(strawHatPirate, sort)#對每個變數都應用sort函數
sapply(strawHatPirate, sort)#對每個變數都應用sort函數
strawHatPirate <- strawHatPirate[ ,-c("birthday")]
View(strawHatPirate)
strawHatPirate <- strawHatPirate[ ,-5]
View(strawHatPirate)
lapply(strawHatPirate, sort)#對每個變數都應用sort函數
sapply(strawHatPirate, sort)#對每個變數都應用sort函數
diabetes <- factor(c("Type1", "Type2", "Type1", "Type1"))
status <- factor(c("Poor", "Improved", "Excellent", "Poor"))
patient <- 1:4
patient <- as.character(1:4)
patient <- as.character(1:4)
diabetes <- factor(c("Type1", "Type2", "Type1", "Type1"))
status <- factor(c("Poor", "Improved", "Excellent", "Poor"))
patientDataFrame <- data.frame(patient, diabetes, status)
str(patientDataFrame)
patient <- as.character(1:4)
age <- (33, 55, 60, 75)
diabetes <- factor(c("Type1", "Type2", "Type1", "Type1"))
status <- factor(c("Poor", "Improved", "Excellent", "Poor"))
patientDataFrame <- data.frame(patient, diabetes, status, stringsAsFactors=F)
str(patientDataFrame)
status
tapply(age, diabetes, mean)
tapply(age, status, mean)
status <- c("Poor", "Improved", "Excellent", "Poor")
tapply(age, status, mean)#
status
diabetes
status <- c("Poor", "Improved", "Excellent", "Poor")
statusF <- factor(status)
status <- factor(c("Poor", "Improved", "Excellent", "Poor"))
age <- c(20, 33, 55, 72)
tapply(age, status, mean)
status <- factor(c("Poor", "Improved", "Excellent", "Poor", "Excellent"))
age <- c(20, 33, 55, 72, 61)
tapply(age, status, mean)
q()
# Accidents of Formosa Fun Coast
# Data Manipulation
setwd("C:/ApplicationInR/funCoastAccident")
Sys.setlocale(category = "LC_ALL", locale = "cht")#csv檔是繁體中文
accidentList <- read.csv("data/funCoastAccident.csv", header=TRUE, sep=",", colClasses=c("character", "character", "character", "character", "character", "character", "integer", "character", "character"), na.strings=c(''))
colnames(accidentList) <- c("no", "county", "hospital", "gender", "nationality", "age", "woundType1", "woundType2")
accidentList$woundType1[is.na(accidentList$woundType1)] <- '不詳'
accidentList$woundType2[is.na(accidentList$woundType2)] <- '不詳'
accidentList$woundType1 <- factor(accidentList$woundType1, order=TRUE, levels=c("檢傷四級", "檢傷三級", "檢傷二級", "檢傷一級", "不詳"))
accidentList$woundType2 <- factor(accidentList$woundType2, order=TRUE, levels=c("輕傷", "中傷", "重傷", "不詳"))
saveRDS(accidentList, "data/accidentList.rds")
accidentList <- read.table("data/funCoastAccident.csv", header=TRUE, sep=",", colClasses=c("character", "character", "character", "character", "character", "character", "integer", "character", "character"), na.strings=c(''))
# Accidents of Formosa Fun Coast
# Data Manipulation
setwd("C:/ApplicationInR/funCoastAccident")
Sys.setlocale(category = "LC_ALL", locale = "cht")#csv檔是繁體中文
accidentList <- read.csv("data/funCoastAccident.csv", header=TRUE, sep=",", colClasses=c("character", "character", "character", "character", "character", "integer", "character", "character"), na.strings=c(''))
colnames(accidentList) <- c("no", "county", "hospital", "gender", "nationality", "age", "woundType1", "woundType2")
accidentList$woundType1[is.na(accidentList$woundType1)] <- '不詳'
accidentList$woundType2[is.na(accidentList$woundType2)] <- '不詳'
accidentList$woundType1 <- factor(accidentList$woundType1, order=TRUE, levels=c("檢傷四級", "檢傷三級", "檢傷二級", "檢傷一級", "不詳"))
accidentList$woundType2 <- factor(accidentList$woundType2, order=TRUE, levels=c("輕傷", "中傷", "重傷", "不詳"))
saveRDS(accidentList, "data/accidentList.rds")
setwd("C:/NTUTrainRL2")
Sys.setlocale(category = "LC_ALL", locale = "cht")
accidentList <- readRDS('data/accidentList.rds')
colnames(accidentList) <- c("編號","醫院所在縣市別", "醫院別", "性別", "國籍別", "年齡", "醫療檢傷", "救護檢傷")
summary(accidentList)
accidentListNew <- accidentList[accidentList$年齡==101,]
View(accidentListNew)
View(accidentList)
accidentListNew <- accidentList[accidentList$性別=='男',]
View(accidentListNew)
accidentListNew <- accidentList[accidentList$性別=='女',]
View(accidentListNew)
accidentListNew <- accidentList[accidentList$年齡==101.00,]
View(accidentListNew)
accidentListNew <- accidentList[!accidentList$編號=='H326622',]
View(accidentListNew)
summary(accidentList)
View(accidentListNew)
par(mfrow=c(3,2))
barPlots <- function(){
variables <- names(accidentListNew[, c(-1, -2, -5)])
for (name in variables){
barplot(table(accidentListNew[ ,name]), main=paste("依",name), ylab="人數")
}
}
barPlots()
barplot(table(accidentListNew$醫院別), main="依醫院別", ylab="人數", las=2)
barPlots <- function(){
variables <- names(accidentListNew[, c(-1, -3, -5)])
for (name in variables){
barplot(table(accidentListNew[ ,name]), main=paste("依",name), ylab="人數")
}
}
barPlots()
barplot(table(accidentListNew$醫院別), main="依醫院別", ylab="人數", las=2)
par(mfrow=c(1,1))
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, freq=FALSE, ylim=c(0, 0.12), col="skyblue")
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
```{r}
par(mfrow=c(3,2))
barPlots <- function(){
variables <- names(accidentListNew[, c(-1, -3, -4)])
for (name in variables){
barplot(table(accidentListNew[ ,name]), main=paste("依",name), ylab="人數")
}
}
barPlots()
barplot(table(accidentListNew$醫院別), main="依醫院別", ylab="人數", las=2)
```
par(mfrow=c(3,2))
barPlots <- function(){
variables <- names(accidentListNew[, c(-1, -3, -6)])
for (name in variables){
barplot(table(accidentListNew[ ,name]), main=paste("依",name), ylab="人數")
}
}
barPlots()
barplot(table(accidentListNew$醫院別), main="依醫院別", ylab="人數", las=2)
par(mfrow=c(3,2))
boxPlots <- function(){
variables <- names(accidentListNew[, c(-1, -3, -6)])
for (name in variables){
boxplot(年齡 ~ accidentListNew[ ,name], data=accidentListNew, main=paste('年齡依',name))
}
}
boxPlots()
accidentListShort <- accidentListNew[accidentListNew$醫院所在縣市別=='桃園市' & accidentListNew$年齡!=NA, ]
View(accidentListShort)
View(accidentListShort)
accidentListShort <- accidentListNew[accidentListNew$醫院所在縣市別=='桃園市',]
View(accidentListShort)
accidentListShort <- accidentListNew[accidentListNew$醫院所在縣市別=='桃園市' & !is.na(accidentListNew$年齡), ]
View(accidentListShort)
dotchart(accidentListShort$年齡,labels=row.names(accidentListShort),cex=.7)
par(mfrow=c(1,1))
dotchart(accidentListShort$年齡,labels=row.names(accidentListShort),cex=.7)
# Accidents of Formosa Fun Coast
# Data Manipulation
setwd("C:/ApplicationInR/funCoastAccident")
Sys.setlocale(category = "LC_ALL", locale = "cht")#csv檔是繁體中文
accidentList <- read.csv("data/funCoastAccident.csv", header=TRUE, sep=",", row.names="編號", colClasses=c("character", "character", "character", "character", "character", "integer", "character", "character"), na.strings=c(''))
colnames(accidentList) <- c("county", "hospital", "gender", "nationality", "age", "woundType1", "woundType2")
accidentList$woundType1[is.na(accidentList$woundType1)] <- '不詳'
accidentList$woundType2[is.na(accidentList$woundType2)] <- '不詳'
accidentList$woundType1 <- factor(accidentList$woundType1, order=TRUE, levels=c("檢傷四級", "檢傷三級", "檢傷二級", "檢傷一級", "不詳"))
accidentList$woundType2 <- factor(accidentList$woundType2, order=TRUE, levels=c("輕傷", "中傷", "重傷", "不詳"))
saveRDS(accidentList, "data/accidentList.rds")
setwd("C:/NTUTrainRL2")
Sys.setlocale(category = "LC_ALL", locale = "cht")
accidentList <- readRDS('data/accidentList.rds')
colnames(accidentList) <- c("醫院所在縣市別", "醫院別", "性別", "國籍別", "年齡", "醫療檢傷", "救護檢傷")
summary(accidentList)
accidentList$年齡
accidentListNew <- accidentList[accidentList$年齡==101, ]
View(accidentListNew)
accidentListNew <- accidentList[accidentList$年齡 < 101 or is.na(accidentList$年齡)=TRUE, ]
accidentListNew <- accidentList[accidentList$年齡 < 101 | is.na(accidentList$年齡)=TRUE, ]
accidentListNew <- accidentList[accidentList$年齡 < 101 | !is.na(accidentList$年齡), ]
View(accidentListNew)
accidentListNew <- accidentList[accidentList$年齡==101, ]
View(accidentListNew)
accidentListNew <- accidentList[accidentList$年齡!=101, ]
View(accidentListNew)
head(accidentListNew)
accidentListNew <- subset(accidentList, 年齡!=101)
View(accidentListNew)
accidentListNew <- subset(accidentList, 年齡!=101 | is.na(年齡)=TRUE)
accidentListNew <- subset(accidentList, 年齡!=101 | is.na(年齡))
View(accidentListNew)
par(mfrow=c(3,2))
barPlots <- function(){
variables <- names(accidentListNew[, c(-2, -5)])
for (name in variables){
barplot(table(accidentListNew[ ,name]), main=paste("依",name), ylab="人數")
}
}
barPlots()
barplot(table(accidentListNew$醫院別), main="依醫院別", ylab="人數", las=2)
par(mfrow=c(1,1))
hist(na.omit(accidentListNew$年齡), xlab="年齡", ylab="密度",  main="依年齡", breaks=15, freq=FALSE, ylim=c(0, 0.12), col="skyblue")
rug(jitter(accidentListNew$年齡))#在X軸上顯示資料密度
lines(density(accidentListNew$年齡, na.rm=TRUE), col="red", lwd=2)#hist的freq要設為false才看得到
par(mfrow=c(3,2))
boxPlots <- function(){
variables <- names(accidentListNew[, c(-2, -5)])
for (name in variables){
boxplot(年齡 ~ accidentListNew[ ,name], data=accidentListNew, main=paste('年齡依',name))
}
}
boxPlots()
accidentListShort <- accidentListNew[accidentListNew$醫院所在縣市別=='桃園市' & !is.na(accidentListNew$年齡), ]
accidentListShortOrder <- accidentListShort[order(accidentListShort$年齡), ]
dotchart(accidentListShortOrder$年齡,labels=row.names(accidentListShortOrder),cex=.7)
par(mfrow=c(1,1))
dotchart(accidentListShortOrder$年齡,labels=row.names(accidentListShortOrder),cex=.7)
dotchart(accidentListShortOrder$年齡,labels=row.names(accidentListShortOrder),cex=.7, main="點圖依年齡")
dotchart(accidentListShortOrder$年齡,labels=row.names(accidentListShortOrder),cex=.7, main="點圖依年齡", xlab="年齡", ylab="編號")
dotchart(accidentListShortOrder$年齡,labels=row.names(accidentListShortOrder),cex=.7, main="點圖依年齡", xlab="年齡")
table(accidentListNew$醫療檢傷)
woundType <- table(accidentListNew$醫療檢傷)
woundType
woundType[1]
woundType[[1]]
woundType[[1:5]]
woundType[[1]:[5]]
woundType[1]
length(woundType)
woundType[1][1]
woundType[[1]]
woundType[1][2]
woundType[1][1]
woundType[2][2]
woundType[2]
woundType[3]
woundType[3, 1]
woundType
woundType(1,1)
woundType <- as.vector(table(accidentListNew$醫療檢傷))
woundType
slices <- as.vector(table(accidentListNew$醫療檢傷))
label <- names(table(accidentListNew$醫療檢傷))
slices <- as.vector(table(accidentListNew$醫療檢傷))#把table轉為向量
labels <- names(table(accidentListNew$醫療檢傷))#table就是有名字的向量
pie(slices, labels = labels, main="醫療檢傷比例")
slices <- as.vector(table(accidentListNew$醫療檢傷))#把table轉為向量
labels <- paste(names(table(accidentListNew$醫療檢傷)), "\n", slices)#table就是有名字的向量
pie(slices, labels = labels, main="醫療檢傷比例")
slices <- as.vector(table(accidentListNew$醫療檢傷))#把table轉為向量
labels <- paste(names(table(accidentListNew$醫療檢傷)), "\n", slices, "人", sep="")#table就是有名字的向量
pie(slices, labels = labels, main="醫療檢傷比例")
percentage <- round(slices/sum(slices)*100)
labels2 <- paste(labels, " ", percentage, "%", sep="")
pie(slices, labels=labels2, col=rainbow(length(labels2)), main="醫療檢傷比例")
percentage <- round(slices/sum(slices)*100)
labels2 <- paste(labels, " ", percentage, "%", sep="")
pie(slices, labels=labels2, col=rainbow(length(labels2)), main="醫療檢傷比例")
percentage <- round(slices/sum(slices)*100)
labels2 <- paste(names(table(accidentListNew$醫療檢傷)), " ", percentage, "%", sep="")
pie(slices, labels=labels2, col=rainbow(length(labels2)), main="醫療檢傷比例")
percentage <- round(slices/sum(slices)*100)
labels2 <- paste(names(table(accidentListNew$醫療檢傷)), "\n", percentage, "%", sep="")
pie(slices, labels=labels2, col=rainbow(length(labels2)), main="醫療檢傷比例")
slices <- as.vector(table(accidentListNew$醫療檢傷))#把table轉為向量
labels <- paste(names(table(accidentListNew$醫療檢傷)), "\n", slices, "人", sep="")#table就是有名字的向量
pie(slices, labels = labels, main="醫療檢傷人數")
q()
